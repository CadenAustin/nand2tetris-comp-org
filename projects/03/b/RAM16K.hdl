// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // BASE+4 LEVEL RAM, DMUX for Loading, Mux for Output
    DMux4Way(in=load, sel=address[12..13], a=dmux0, b=dmux1, c=dmux2, d=dmux3);

    RAM4K(in=in, address=address[0..11], load=dmux0, out=reg0);
    RAM4K(in=in, address=address[0..11], load=dmux1, out=reg1);
    RAM4K(in=in, address=address[0..11], load=dmux2, out=reg2);
    RAM4K(in=in, address=address[0..11], load=dmux3, out=reg3);
                
    Mux4Way16(a=reg0, b=reg1, c=reg2, d=reg3, sel=address[12..13], out=out);
}
